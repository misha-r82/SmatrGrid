<UserControl x:Class="SmartGrid.TagGrpControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SmartGrid"
             xmlns:lib="clr-namespace:Lib;assembly=Lib"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid >
        <Grid.Resources>
            <local:TagTemplateSelector x:Key="TagTemplateSelector"/>
            <lib:TestConverter x:Key="TestConverter"/>
            <lib:BoolVisConverter x:Key="BoolVisConverter"/>
            <Style TargetType="ToggleButton" x:Key="ExpandBtnStyle">
                <!-- <Setter Property="Content">
                   <Setter.Value>
                        <Path Fill="Black" Stretch="Fill" Margin="1,0" Data="M 0 0 L 3 0 L 1.5 3 Z"/>
                    </Setter.Value>
                </Setter>-->
                <Style.Triggers>
                    <Trigger Property="IsChecked" Value="False">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Path Fill="Black" Stretch="Fill" Margin="1,0" Data="M 0 0 L 3 0 L 1.5 3 Z"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                    <Trigger Property="IsChecked" Value="True">
                        <Setter Property="Content">
                            <Setter.Value>
                                <Path Fill="Green" Stretch="Fill" Margin="1,0" Data="M 0 3 L 3 3 L 1.5 0 Z"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger>
                </Style.Triggers>
                <Setter Property="Border.CornerRadius" Value="15"/>
                <Setter Property="MinWidth" Value="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinHeight" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}}" />
                <Setter Property="VerticalAlignment" Value="Bottom"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ToggleButton">
                            <Border CornerRadius="0" Background="{TemplateBinding Background}"
                                    BorderThickness="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center">

                                </ContentPresenter>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>

            </Style>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>    
            <TextBox Name="txtHeader" Text="{Binding Header}"/>
            <Canvas Grid.Column="1" Width="10" Background="Aquamarine" PreviewMouseDown="Drag_OnPreviewMouseDown"/>
        </Grid>
        
        <ListBox Name="lstMain" Grid.Row="1" ItemsSource="{Binding}" Drop="ListBox_Drop" 
                  AllowDrop="True" HorizontalContentAlignment="Stretch">
                <ListBox.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="AcceptsReturn" Value="True"/>
                    <Setter Property="HorizontalAlignment" Value="Stretch"/>
                    <Setter Property="IsHitTestVisible" Value="False" />
                    <Style.Triggers>
                        <DataTrigger
                            Binding="{Binding IsSelected, RelativeSource={RelativeSource FindAncestor, 
                            AncestorType={x:Type ListViewItem}, AncestorLevel=1}}"
                            Value="True">
                            <Setter Property="IsHitTestVisible" Value="True" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </ListBox.Resources>
            <ListBox.ItemTemplate>
                <DataTemplate>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <TextBox Text="{Binding Header}" Grid.Row="0"/>
                    <Button Name ="btnAdd" Content="+"  Grid.Column="1" Click="BtnAdd_OnClick"/>
                </Grid>
                </DataTemplate>                   
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>

</UserControl>

